name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: Debug - List directory contents
      run: |
        echo "Current directory:"
        pwd
        echo "Contents of current directory:"
        ls -la
        echo "Contents of MoviesRecommend directory (if it exists):"
        ls -la MoviesRecommend || echo "MoviesRecommend directory not found"
        echo "Searching for requirements.txt:"
        find . -name requirements.txt
    - name: Create requirements.txt
      run: |
        echo "Django==3.2.10" > requirements.txt
        echo "pymysql==1.0.2" >> requirements.txt
        echo "mysqlclient==2.1.0" >> requirements.txt
        echo "coverage==6.5.0" >> requirements.txt
        echo "unittest-xml-reporting==3.2.0" >> requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        echo "Attempting to install from MoviesRecommend/requirements.txt"
        if [ -f MoviesRecommend/requirements.txt ]; then
          cat MoviesRecommend/requirements.txt
          pip install -r MoviesRecommend/requirements.txt
        elif [ -f requirements.txt ]; then
          echo "Attempting to install from ./requirements.txt"
          cat requirements.txt
          pip install -r requirements.txt
        else
          echo "requirements.txt not found in expected locations"
          echo "Current directory contents:"
          ls -la
          exit 1
        fi
        pip install coverage==6.5.0 unittest-xml-reporting==3.2.0
    - name: Run tests with coverage
      run: |
        cd MoviesRecommend
        coverage run manage.py test
        coverage xml
        coverage html
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: MoviesRecommend/htmlcov/
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: MoviesRecommend/test-reports/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f MoviesRecommend/requirements.txt ]; then
          pip install -r MoviesRecommend/requirements.txt
        elif [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "requirements.txt not found in expected locations"
          exit 1
        fi
    - name: Run migrations
      run: |
        cd MoviesRecommend
        python manage.py migrate
    - name: Collect static files
      run: |
        cd MoviesRecommend
        python manage.py collectstatic --noinput
