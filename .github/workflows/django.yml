name: Django CI/CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django pymysql
        if [ -f MoviesRecommend/requirements.txt ]; then
          pip install -r MoviesRecommend/requirements.txt
        else
          echo "requirements.txt not found, installing common dependencies"
          pip install django pymysql mysqlclient
        fi
    - name: Run Tests
      run: |
        cd MoviesRecommend
        python manage.py test
    - name: Run Tests (alternative path)
      if: failure()
      run: |
        find . -name manage.py -exec python {} test \;

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r MoviesRecommend/requirements.txt
    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        pip install heroku
        git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main
    - name: Run database migrations
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku run python MoviesRecommend/manage.py migrate --app ${{ secrets.HEROKU_APP_NAME }}
    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Deployment to Heroku ${{ job.status == 'success' && 'succeeded' || 'failed' }}!
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
